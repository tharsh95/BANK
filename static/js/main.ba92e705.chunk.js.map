{"version":3,"sources":["Bank.jsx","App.js","reportWebVitals.js","index.js"],"names":["Bank","useState","amount","setAmount","flag","setFlag","localStorage","getItem","balance","setBalance","state","setState","useEffect","setItem","className","type","placeholder","value","onChange","e","target","onClick","parseFloat","remaining","setTimeout","handleBalance","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oMAmDeA,EAjDF,WACT,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAwBF,oBAAS,GAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAA8BJ,mBAASK,aAAaC,QAAQ,YAA5D,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA0BR,mBAAS,GAAnC,mBAAOS,EAAP,KAAcC,EAAd,KAsBA,OAfAC,qBAAU,WACNN,aAAaO,QAAQ,UAAWL,KACjC,CAACA,IAcA,gCACI,wCACKN,KACL,qBAAKY,UAAU,mBAAf,SACI,uBAAOC,KAAK,OACRD,UAAU,8BACVE,YAAY,sCACZC,MAAOf,EACPgB,SA9BhB,SAAsBC,GAClBhB,EAAUgB,EAAEC,OAAOH,YAgCf,sBAAKH,UAAU,aAAf,UACI,wBAAQC,KAAK,SAASD,UAAU,uBAAuBO,QAAS,WA9BxEZ,GAAW,SAAAD,GAAO,OAAIc,WAAWd,GAAWc,WAAWpB,OA8B/C,uBACA,wBAAQa,KAAK,SAASD,UAAU,uBAAuBO,QAAS,WAzBpEb,EAAUN,GAAU,GACpBO,GAAW,SAAAD,GAAO,OAAIc,WAAWd,GAAWc,WAAWpB,OAwBnD,4BACA,wBAAQa,KAAK,SAASD,UAAU,uBAAuBO,QAAS,kBAvB5E,WACI,IAAME,EAAYjB,aAAaC,QAAQ,WACvCI,EAASY,GACTlB,GAAQ,GACRmB,YAAW,WACPnB,GAAQ,KACT,KAiB2EoB,IAAtE,8BAEJ,uBACA,gDAAoBrB,EAAKM,EAAM,cClC5BgB,MARf,WACE,OACE,qBAAKZ,UAAU,MAAf,SACE,cAAC,EAAD,OCKSa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.ba92e705.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\r\n\r\nconst Bank = () => {\r\n    const [amount, setAmount] = useState(\"\")\r\n    const [flag, setFlag] = useState(false)\r\n    const [balance, setBalance] = useState(localStorage.getItem(\"balance\"))\r\n    const [state, setState] = useState(0)\r\n    function handleChange(e) {\r\n        setAmount(e.target.value)\r\n    }\r\n    function handleDeposit() {\r\n        setBalance(balance => parseFloat(balance) + parseFloat(amount))\r\n    }\r\n    useEffect(() => {\r\n        localStorage.setItem(\"balance\", balance)\r\n    }, [balance])\r\n    function handleWithdraw() {\r\n        if (balance - amount >= 0)\r\n            setBalance(balance => parseFloat(balance) - parseFloat(amount))\r\n    }\r\n    function handleBalance(){\r\n        const remaining = localStorage.getItem(\"balance\")\r\n        setState(remaining)\r\n        setFlag(true)\r\n        setTimeout(() => {\r\n            setFlag(false)\r\n        }, 5000);\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>&#8377;\r\n                {amount}</h1>\r\n            <div className=\"input-group mb-3\">\r\n                <input type=\"text\"\r\n                    className=\"form-control container my-3\"\r\n                    placeholder=\"Enter amount to deposit or withdraw\"\r\n                    value={amount}\r\n                    onChange={handleChange}\r\n                />\r\n            </div>\r\n            <div className=\"container \">\r\n                <button type=\"button\" className=\"btn btn-primary mx-3\" onClick={() => handleDeposit()}>Add Money</button>\r\n                <button type=\"button\" className=\"btn btn-primary mx-3\" onClick={() => handleWithdraw()} >Withdraw Money</button>\r\n                <button type=\"button\" className=\"btn btn-primary mx-3\" onClick={() => handleBalance()} >Fetch Balance</button>\r\n            </div>\r\n            <br />\r\n            <h4>Balance:&#8377;{flag?state:\"****\"}</h4>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Bank\r\n","// import logo from './logo.svg';\nimport './App.css';\nimport Bank from './Bank';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Bank/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}